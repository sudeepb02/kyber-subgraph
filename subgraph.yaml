specVersion: 0.0.2
schema:
  file: ./schema.graphql
#Kyber Network Proxy contract  
dataSources:
  - kind: ethereum/contract
    name: KyberProxyContract
    network: mainnet
    source:
      address: "0x818E6FECD516Ecc3849DAf6845e3EC868087B755"
      abi: KyberProxyContract
      startBlock: 5911438
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Kyber
      abis:
        - name: KyberProxyContract
          file: ./abis/KyberProxyContract.json
      eventHandlers:
        - event: KyberNetworkSet(address,address)
          handler: handleKyberNetworkSet
      file: ./src/mapping.ts
#Kyber Network Contract
templates:
  - name: KyberContract
    kind: ethereum/contract
    network: mainnet
    source:
      #address: "0x65bF64Ff5f51272f729BDcD7AcFB00677ced86Cd"
      abi: KyberContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Kyber
        - Reserve
      abis:
        - name: KyberContract
          file: ./abis/KyberContract.json
      eventHandlers:
        - event: AddReserveToNetwork(indexed address,bool,bool)
          handler: handleAddReserveToNetwork
        - event: KyberTrade(indexed address,address,address,uint256,uint256,address,uint256,address,address,bytes)
          handler: handleKyberTrade
      file: ./src/mapping.ts   
      
#Reserve Contract template
  - name: ReserveContract
    kind: ethereum/contract
    network: mainnet
    source:
      #address: "0x63825c174ab367968EC60f061753D3bbD36A0D8F"
      abi: ReserveContract
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      entities:
        - Reserve
      abis:
        - name: ReserveContract
          file: ./abis/ReserveContract.json
      eventHandlers:
        - event: DepositToken(address,uint256)
          handler: handleDepositToken
        - event: TradeExecute(indexed address,address,uint256,address,uint256,address)
          handler: handleTradeExecute
        - event: TradeEnabled(bool)
          handler: handleTradeEnabled
        - event: WithdrawAddressApproved(address,address,bool)
          handler: handleWithdrawAddressApproved
        - event: WithdrawFunds(address,uint256,address)
          handler: handleWithdrawFunds
        #- event: TokenWithdraw(address,uint256,address)
        #  handler: handleTokenWithdraw
        #- event: EtherWithdraw(uint256,address)
        #  handler: handleEtherWithdraw
      file: ./src/mapping.ts      
